{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/lfmelo/Documents/GitHub/trabalho-mobile/src/screens/RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from \"../config/firebase-config\";\nimport { toast } from 'react-toastify';\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError = nameValidator(name);\n    var emailError = emailValidator(email);\n    var passwordError = passwordValidator(password);\n\n    if (emailError || passwordError || nameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'Dashboard'\n      }]\n    });\n  };\n\n  var cadastrar = function cadastrar() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (response) {\n      console.log('criado com sucesso');\n      var user = response.user;\n      console.log(user);\n    }).catch(function (error) {\n      console.log(error);\n\n      if (error.message === 'Firebase: Error (auth/email-already-in-use).') {\n        toast.error('Email já cadastrado!');\n      }\n    });\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: navigation.goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Criar conta\"), React.createElement(TextInput, {\n    label: \"Nome\",\n    returnKeyType: \"next\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Senha\",\n    returnKeyType: \"done\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: cadastrar,\n    style: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Cadastrar\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"J\\xE1 possui uma conta? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('LoginScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","createUserWithEmailAndPassword","auth","toast","RegisterScreen","navigation","name","setName","email","setEmail","password","setPassword","onSignUpPressed","nameError","emailError","passwordError","error","reset","index","routes","cadastrar","then","response","console","log","user","catch","message","goBack","text","marginTop","styles","row","replace","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary"],"sources":["/Users/lfmelo/Documents/GitHub/trabalho-mobile/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { nameValidator } from '../helpers/nameValidator'\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\nimport { auth } from '../config/firebase-config'\nimport { toast } from 'react-toastify'\n\nexport default function RegisterScreen({ navigation }) {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const onSignUpPressed = () => {\n    const nameError = nameValidator(name)\n    const emailError = emailValidator(email)\n    const passwordError = passwordValidator(password)\n\n    if (emailError || passwordError || nameError) {\n      setName({ ...name, error: nameError })\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{ name: 'Dashboard' }],\n    })\n  }\n\n  const cadastrar = () => {\n    createUserWithEmailAndPassword(auth, email, password) \n      .then((response) => {\n        console.log('criado com sucesso')\n        const user = response.user\n        console.log(user)\n        //COLOCAR NAVEGACAO\n      })\n      .catch(error => {\n        console.log(error)\n        if(error.message === 'Firebase: Error (auth/email-already-in-use).') {\n          toast.error('Email já cadastrado!')\n        }\n      })\n  }\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Criar conta</Header>\n      <TextInput\n        label=\"Nome\"\n        returnKeyType=\"next\"\n        value={name}\n        onChangeText={(text) => setName(text)}\n        // error={!!name.error}\n        // errorText={name.error}\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n        // error={!!email.error}\n        // errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Senha\"\n        returnKeyType=\"done\"\n        value={password}\n        onChangeText={(text) => setPassword(text)}\n        // error={!!password.error}\n        // errorText={password.error}\n        secureTextEntry\n      />\n      <Button\n        mode=\"contained\"\n        onPress={cadastrar}\n        style={{ marginTop: 24 }}\n      >\n        Cadastrar\n      </Button>\n      <View style={styles.row}>\n        <Text>Já possui uma conta? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('LoginScreen')}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}